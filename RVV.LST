     1                                  ; Rodolfo Vieira Valentim
     2                                  ; Sistemas Embarcados 2016/1
     3                                  
     4                                  %macro drawline 5 		;x1,y1,x2,y2,color
     5                                  	mov	ax,%1
     6                                  	push	ax
     7                                  	mov	ax,%2
     8                                  	push	ax
     9                                  	mov	ax,%3
    10                                  	push	ax
    11                                  	mov	ax,%4
    12                                  	push	ax
    13                                  	mov	byte[cor],%5
    14                                  	call	line
    15                                  %endmacro
    16                                  
    17                                  %macro ponto 2				; x,y,color
    18                                  	add 	%1, 3
    19                                  	add 	%2, 100
    20                                  	push 	%1
    21                                  	push 	%2	
    22                                  	call	plot_xy
    23                                  	sub	%1, 3
    24                                  	sub 	%2, 100
    25                                  %endmacro
    26                                  
    27                                  %macro writeword 4
    28                                  	mov	byte[cor], %4
    29                                      	mov     bx,0
    30                                      	mov     dh,%2			;linha 0-29
    31                                      	mov     dl,%3			;coluna 0-79
    32                                  %%local:
    33                                  	call	cursor
    34                                      	mov     al,[bx+%1]
    35                                  	cmp	al, '$'
    36                                  	je	%%exit
    37                                  	call	caracter
    38                                      	inc     bx			;proximo caracter
    39                                  	inc	dl			;avanca a coluna
    40                                      	jmp	%%local
    41                                  %%exit:
    42                                  %endmacro
    43                                  
    44                                  ;*******************************************************************
    45                                  
    46                                  segment code
    47                                  ..start:
    48 00000000 B8[0000]                    	mov 	ax,data
    49 00000003 8ED8                        	mov 	ds,ax
    50 00000005 B8[0000]                    	mov 	ax,stack
    51 00000008 8ED0                        	mov 	ss,ax
    52 0000000A BC[0001]                    	mov 	sp,stacktop
    53                                  
    54                                  	; salvar modo corrente de video(vendo como esta o modo de video da maquina)
    55 0000000D B40F                            mov 	ah, 0Fh
    56 0000000F CD10                        	int 	10h
    57 00000011 A2[0100]                    	mov 	[modo_anterior], al   
    58                                  
    59                                  	; alterar modo de video para grafico 640x480 16 cores
    60 00000014 B012                        	mov    	al, 12h
    61 00000016 B400                       	mov    	ah, 0
    62 00000018 CD10                        	int    	10h
    63                                  	
    64                                  	drawline 255, 0, 255, 479, branco_intenso
    65 0000001A B8FF00              <1> 	mov	ax,%1
    66 0000001D 50                  <1> 	push	ax
    67 0000001E B80000              <1> 	mov	ax,%2
    68 00000021 50                  <1> 	push	ax
    69 00000022 B8FF00              <1> 	mov	ax,%3
    70 00000025 50                  <1> 	push	ax
    71 00000026 B8DF01              <1> 	mov	ax,%4
    72 00000029 50                  <1> 	push	ax
    73 0000002A C606[0000]0F        <1> 	mov	byte[cor],%5
    74 0000002F E85405              <1> 	call	line
    75                                  	drawline 255, 239, 639, 239, branco_intenso
    76 00000032 B8FF00              <1> 	mov	ax,%1
    77 00000035 50                  <1> 	push	ax
    78 00000036 B8EF00              <1> 	mov	ax,%2
    79 00000039 50                  <1> 	push	ax
    80 0000003A B87F02              <1> 	mov	ax,%3
    81 0000003D 50                  <1> 	push	ax
    82 0000003E B8EF00              <1> 	mov	ax,%4
    83 00000041 50                  <1> 	push	ax
    84 00000042 C606[0000]0F        <1> 	mov	byte[cor],%5
    85 00000047 E83C05              <1> 	call	line
    86                                  	drawline 63, 479, 63, 431, branco_intenso
    87 0000004A B83F00              <1> 	mov	ax,%1
    88 0000004D 50                  <1> 	push	ax
    89 0000004E B8DF01              <1> 	mov	ax,%2
    90 00000051 50                  <1> 	push	ax
    91 00000052 B83F00              <1> 	mov	ax,%3
    92 00000055 50                  <1> 	push	ax
    93 00000056 B8AF01              <1> 	mov	ax,%4
    94 00000059 50                  <1> 	push	ax
    95 0000005A C606[0000]0F        <1> 	mov	byte[cor],%5
    96 0000005F E82405              <1> 	call	line
    97                                  	drawline 127, 479, 127, 431, branco_intenso
    98 00000062 B87F00              <1> 	mov	ax,%1
    99 00000065 50                  <1> 	push	ax
   100 00000066 B8DF01              <1> 	mov	ax,%2
   101 00000069 50                  <1> 	push	ax
   102 0000006A B87F00              <1> 	mov	ax,%3
   103 0000006D 50                  <1> 	push	ax
   104 0000006E B8AF01              <1> 	mov	ax,%4
   105 00000071 50                  <1> 	push	ax
   106 00000072 C606[0000]0F        <1> 	mov	byte[cor],%5
   107 00000077 E80C05              <1> 	call	line
   108                                  	drawline 191, 479, 191, 431, branco_intenso
   109 0000007A B8BF00              <1> 	mov	ax,%1
   110 0000007D 50                  <1> 	push	ax
   111 0000007E B8DF01              <1> 	mov	ax,%2
   112 00000081 50                  <1> 	push	ax
   113 00000082 B8BF00              <1> 	mov	ax,%3
   114 00000085 50                  <1> 	push	ax
   115 00000086 B8AF01              <1> 	mov	ax,%4
   116 00000089 50                  <1> 	push	ax
   117 0000008A C606[0000]0F        <1> 	mov	byte[cor],%5
   118 0000008F E8F404              <1> 	call	line
   119                                  	drawline 0, 431, 255, 431, branco_intenso
   120 00000092 B80000              <1> 	mov	ax,%1
   121 00000095 50                  <1> 	push	ax
   122 00000096 B8AF01              <1> 	mov	ax,%2
   123 00000099 50                  <1> 	push	ax
   124 0000009A B8FF00              <1> 	mov	ax,%3
   125 0000009D 50                  <1> 	push	ax
   126 0000009E B8AF01              <1> 	mov	ax,%4
   127 000000A1 50                  <1> 	push	ax
   128 000000A2 C606[0000]0F        <1> 	mov	byte[cor],%5
   129 000000A7 E8DC04              <1> 	call	line
   130                                  	drawline 0, 63, 255, 63, branco_intenso
   131 000000AA B80000              <1> 	mov	ax,%1
   132 000000AD 50                  <1> 	push	ax
   133 000000AE B83F00              <1> 	mov	ax,%2
   134 000000B1 50                  <1> 	push	ax
   135 000000B2 B8FF00              <1> 	mov	ax,%3
   136 000000B5 50                  <1> 	push	ax
   137 000000B6 B83F00              <1> 	mov	ax,%4
   138 000000B9 50                  <1> 	push	ax
   139 000000BA C606[0000]0F        <1> 	mov	byte[cor],%5
   140 000000BF E8C404              <1> 	call	line
   141                                  
   142                                  	writeword abrir, 1, 1, branco_intenso
   143 000000C2 C606[0000]0F        <1> 	mov	byte[cor], %4
   144 000000C7 BB0000              <1>     	mov     bx,0
   145 000000CA B601                <1>     	mov     dh,%2
   146 000000CC B201                <1>     	mov     dl,%3
   147                              <1> %%local:
   148 000000CE E85904              <1> 	call	cursor
   149 000000D1 8A87[0A00]          <1>     	mov     al,[bx+%1]
   150 000000D5 3C24                <1> 	cmp	al, '$'
   151 000000D7 7409                <1> 	je	%%exit
   152 000000D9 E86504              <1> 	call	caracter
   153 000000DC 43                  <1>     	inc     bx
   154 000000DD FEC2                <1> 	inc	dl
   155 000000DF E9ECFF              <1>     	jmp	%%local
   156                              <1> %%exit:
   157                                  	writeword sair, 1, 10, branco_intenso
   158 000000E2 C606[0000]0F        <1> 	mov	byte[cor], %4
   159 000000E7 BB0000              <1>     	mov     bx,0
   160 000000EA B601                <1>     	mov     dh,%2
   161 000000EC B20A                <1>     	mov     dl,%3
   162                              <1> %%local:
   163 000000EE E83904              <1> 	call	cursor
   164 000000F1 8A87[1000]          <1>     	mov     al,[bx+%1]
   165 000000F5 3C24                <1> 	cmp	al, '$'
   166 000000F7 7409                <1> 	je	%%exit
   167 000000F9 E84504              <1> 	call	caracter
   168 000000FC 43                  <1>     	inc     bx
   169 000000FD FEC2                <1> 	inc	dl
   170 000000FF E9ECFF              <1>     	jmp	%%local
   171                              <1> %%exit:
   172                                  	writeword hist, 1, 18, branco_intenso
   173 00000102 C606[0000]0F        <1> 	mov	byte[cor], %4
   174 00000107 BB0000              <1>     	mov     bx,0
   175 0000010A B601                <1>     	mov     dh,%2
   176 0000010C B212                <1>     	mov     dl,%3
   177                              <1> %%local:
   178 0000010E E81904              <1> 	call	cursor
   179 00000111 8A87[1500]          <1>     	mov     al,[bx+%1]
   180 00000115 3C24                <1> 	cmp	al, '$'
   181 00000117 7409                <1> 	je	%%exit
   182 00000119 E82504              <1> 	call	caracter
   183 0000011C 43                  <1>     	inc     bx
   184 0000011D FEC2                <1> 	inc	dl
   185 0000011F E9ECFF              <1>     	jmp	%%local
   186                              <1> %%exit:
   187                                  	writeword eqhist, 1, 25, branco_intenso
   188 00000122 C606[0000]0F        <1> 	mov	byte[cor], %4
   189 00000127 BB0000              <1>     	mov     bx,0
   190 0000012A B601                <1>     	mov     dh,%2
   191 0000012C B219                <1>     	mov     dl,%3
   192                              <1> %%local:
   193 0000012E E8F903              <1> 	call	cursor
   194 00000131 8A87[1A00]          <1>     	mov     al,[bx+%1]
   195 00000135 3C24                <1> 	cmp	al, '$'
   196 00000137 7409                <1> 	je	%%exit
   197 00000139 E80504              <1> 	call	caracter
   198 0000013C 43                  <1>     	inc     bx
   199 0000013D FEC2                <1> 	inc	dl
   200 0000013F E9ECFF              <1>     	jmp	%%local
   201                              <1> %%exit:
   202                                  	writeword txhist, 1, 33, branco_intenso
   203 00000142 C606[0000]0F        <1> 	mov	byte[cor], %4
   204 00000147 BB0000              <1>     	mov     bx,0
   205 0000014A B601                <1>     	mov     dh,%2
   206 0000014C B221                <1>     	mov     dl,%3
   207                              <1> %%local:
   208 0000014E E8D903              <1> 	call	cursor
   209 00000151 8A87[2100]          <1>     	mov     al,[bx+%1]
   210 00000155 3C24                <1> 	cmp	al, '$'
   211 00000157 7409                <1> 	je	%%exit
   212 00000159 E8E503              <1> 	call	caracter
   213 0000015C 43                  <1>     	inc     bx
   214 0000015D FEC2                <1> 	inc	dl
   215 0000015F E9ECFF              <1>     	jmp	%%local
   216                              <1> %%exit:
   217                                  	writeword txeqhist, 16, 33, branco_intenso
   218 00000162 C606[0000]0F        <1> 	mov	byte[cor], %4
   219 00000167 BB0000              <1>     	mov     bx,0
   220 0000016A B610                <1>     	mov     dh,%2
   221 0000016C B221                <1>     	mov     dl,%3
   222                              <1> %%local:
   223 0000016E E8B903              <1> 	call	cursor
   224 00000171 8A87[3500]          <1>     	mov     al,[bx+%1]
   225 00000175 3C24                <1> 	cmp	al, '$'
   226 00000177 7409                <1> 	je	%%exit
   227 00000179 E8C503              <1> 	call	caracter
   228 0000017C 43                  <1>     	inc     bx
   229 0000017D FEC2                <1> 	inc	dl
   230 0000017F E9ECFF              <1>     	jmp	%%local
   231                              <1> %%exit:
   232                                  	writeword nome, 27, 1, branco_intenso
   233 00000182 C606[0000]0F        <1> 	mov	byte[cor], %4
   234 00000187 BB0000              <1>     	mov     bx,0
   235 0000018A B61B                <1>     	mov     dh,%2
   236 0000018C B201                <1>     	mov     dl,%3
   237                              <1> %%local:
   238 0000018E E89903              <1> 	call	cursor
   239 00000191 8A87[4B00]          <1>     	mov     al,[bx+%1]
   240 00000195 3C24                <1> 	cmp	al, '$'
   241 00000197 7409                <1> 	je	%%exit
   242 00000199 E8A503              <1> 	call	caracter
   243 0000019C 43                  <1>     	inc     bx
   244 0000019D FEC2                <1> 	inc	dl
   245 0000019F E9ECFF              <1>     	jmp	%%local
   246                              <1> %%exit:
   247                                  	writeword disc, 28, 1, branco_intenso
   248 000001A2 C606[0000]0F        <1> 	mov	byte[cor], %4
   249 000001A7 BB0000              <1>     	mov     bx,0
   250 000001AA B61C                <1>     	mov     dh,%2
   251 000001AC B201                <1>     	mov     dl,%3
   252                              <1> %%local:
   253 000001AE E87903              <1> 	call	cursor
   254 000001B1 8A87[5C00]          <1>     	mov     al,[bx+%1]
   255 000001B5 3C24                <1> 	cmp	al, '$'
   256 000001B7 7409                <1> 	je	%%exit
   257 000001B9 E88503              <1> 	call	caracter
   258 000001BC 43                  <1>     	inc     bx
   259 000001BD FEC2                <1> 	inc	dl
   260 000001BF E9ECFF              <1>     	jmp	%%local
   261                              <1> %%exit:
   262                                  
   263 000001C2 B80100                  	mov 	ax, 01h
   264 000001C5 CD33                    	int 	33h		
   265                                  ETERNO:
   266 000001C7 B80500                  	mov 	ax, 05h
   267 000001CA BB0000                  	mov 	bx, 0
   268 000001CD CD33                    	int 	33h
   269                                  
   270 000001CF F6C301                  	test 	bl, 1
   271 000001D2 74F3                    	jz 	ETERNO
   272 000001D4 E92102                  	jmp 	LEFT_BUTTON_PRESSED
   273                                  
   274                                  EXIT:
   275 000001D7 B400                    	mov 	ah,0   			; set video mode
   276 000001D9 A0[0100]                	mov 	al,[modo_anterior]   	; modo anterior
   277 000001DC CD10                    	int 	10h
   278                                  
   279 000001DE B44C                    	mov 	ah, 4Ch
   280 000001E0 CD21                    	int	21h
   281                                  
   282                                  ;*******************Functions***************************************
   283                                  
   284                                  OPEN:
   285 000001E2 C606[8700]00            	mov 	byte[flaghist], 0
   286 000001E7 C606[8800]00            	mov 	byte[flageqhist], 0
   287 000001EC BB[8902]                	mov 	bx, cfd
   288 000001EF BF[8900]                	mov 	di, histogram
   289 000001F2 BE[8904]                	mov 	si, eqhistogram
   290 000001F5 B83F01                  	mov 	ax, 319
   291 000001F8 BA3F01                  	mov 	dx, 319
   292 000001FB B90001                  	mov 	cx, 256
   293                                  RESETH:
   294 000001FE C7070000                	mov 	word[bx], 00
   295 00000202 C7050000                	mov 	word[di], 00
   296 00000206 C7040000                	mov 	word[si], 00
   297 0000020A 81C70200                	add 	di, 2
   298 0000020E 81C60200                	add 	si, 2
   299 00000212 81C30200                	add 	bx, 2
   300 00000216 60                      	pusha
   301                                  	drawline ax, 16, dx, 207, preto
   302 00000217 89C0                <1> 	mov	ax,%1
   303 00000219 50                  <1> 	push	ax
   304 0000021A B81000              <1> 	mov	ax,%2
   305 0000021D 50                  <1> 	push	ax
   306 0000021E 89D0                <1> 	mov	ax,%3
   307 00000220 50                  <1> 	push	ax
   308 00000221 B8CF00              <1> 	mov	ax,%4
   309 00000224 50                  <1> 	push	ax
   310 00000225 C606[0000]00        <1> 	mov	byte[cor],%5
   311 0000022A E85903              <1> 	call	line
   312 0000022D 61                      	popa
   313 0000022E 60                      	pusha
   314                                  	drawline ax, 250, dx, 447, preto
   315 0000022F 89C0                <1> 	mov	ax,%1
   316 00000231 50                  <1> 	push	ax
   317 00000232 B8FA00              <1> 	mov	ax,%2
   318 00000235 50                  <1> 	push	ax
   319 00000236 89D0                <1> 	mov	ax,%3
   320 00000238 50                  <1> 	push	ax
   321 00000239 B8BF01              <1> 	mov	ax,%4
   322 0000023C 50                  <1> 	push	ax
   323 0000023D C606[0000]00        <1> 	mov	byte[cor],%5
   324 00000242 E84103              <1> 	call	line
   325 00000245 61                      	popa	
   326 00000246 40                      	inc 	ax
   327 00000247 42                      	inc 	dx
   328 00000248 E2B4                    	loop 	RESETH	
   329                                  
   330                                  	;abre arquivo
   331 0000024A B43D                    	mov 	ah, 3Dh
   332 0000024C B000                    	mov	al, 00
   333 0000024E BA[7700]                	mov 	dx, filename
   334 00000251 B90100                  	mov 	cx, 1
   335 00000254 CD21                    	int 	21h	
   336                                  
   337 00000256 A3[8300]                	mov 	word[handle], ax
   338 00000259 BE[8906]                	mov 	si, image
   339                                  
   340                                  READ:
   341 0000025C B43F                     	mov 	ah, 3Fh
   342 0000025E 8B1E[8300]              	mov 	bx, word[handle]
   343 00000262 B90100                  	mov	cx, 1
   344 00000265 BA[8500]                	mov 	dx, input
   345 00000268 CD21                    	int	21h
   346                                  
   347                                  	;verifica se o arquivo acabou	
   348 0000026A 39C8                    	cmp 	ax, cx
   349 0000026C 7C2A                    	jl 	FINISH_READ
   350                                  	
   351                                  	;compara com o espaço
   352 0000026E 8A16[8500]              	mov 	dl, byte[input]
   353 00000272 80FA20                  	cmp 	dl, 20h
   354 00000275 7412                    	je 	STORE
   355                                  
   356 00000277 A0[8200]                	mov 	al, byte[buffer]
   357 0000027A 80EA30                  	sub 	dl, '0'
   358 0000027D B30A                    	mov 	bl, 0ah
   359 0000027F F6E3                    	mul 	bl
   360 00000281 00D0                    	add 	al, dl
   361 00000283 A2[8200]                	mov 	byte[buffer], al
   362 00000286 E9D3FF                  	jmp 	READ
   363                                  	
   364                                  STORE:
   365 00000289 8A16[8200]              	mov 	dl, byte[buffer]
   366 0000028D 8814                    	mov 	byte[si], dl
   367 0000028F 46                      	inc 	si
   368 00000290 C606[8200]00            	mov 	byte[buffer], 00h
   369 00000295 E9C4FF                  	jmp	READ
   370                                  
   371                                  FINISH_READ:
   372                                  	; termina a leitura da imagem
   373 00000298 8A16[8200]              	mov 	dl, [buffer]	
   374 0000029C 8814                    	mov 	byte[si], dl
   375                                  
   376 0000029E B43E                    	mov ah, 3Eh
   377 000002A0 CD21                    	int 21h
   378                                  
   379                                  PRINT:	
   380                                  	; print to screen
   381 000002A2 BE0000                  	mov 	si, 0  	; x
   382 000002A5 BFF900                  	mov 	di, 249	; y
   383 000002A8 BB[8906]                	mov 	bx, image
   384                                  
   385 000002AB 81FF0000                L3:	cmp 	di, 0
   386 000002AF 7434                    	je 	EL3
   387 000002B1 B400                    	mov 	ah, 00h
   388 000002B3 8A07                    	mov 	al, byte[bx]
   389 000002B5 C0E804                  	shr 	al, 4
   390 000002B8 A2[0000]                	mov 	byte[cor], al	
   391                                  	ponto 	si, di
   392 000002BB 81C60300            <1> 	add 	%1, 3
   393 000002BF 81C76400            <1> 	add 	%2, 100
   394 000002C3 56                  <1> 	push 	%1
   395 000002C4 57                  <1> 	push 	%2
   396 000002C5 E89702              <1> 	call	plot_xy
   397 000002C8 81EE0300            <1> 	sub	%1, 3
   398 000002CC 81EF6400            <1> 	sub 	%2, 100
   399 000002D0 46                      	inc 	si
   400 000002D1 43                      	inc 	bx	
   401 000002D2 81FEFA00                	cmp 	si, 250
   402 000002D6 7403                    	je 	RCAX
   403 000002D8 E9D0FF                  	jmp 	L3
   404                                  RCAX:	
   405                                  	;reset counter ax
   406 000002DB BE0000                  	mov 	si, 0
   407 000002DE 81EF0100                	sub 	di, 1
   408 000002E2 E9C6FF                  	jmp 	L3
   409                                  
   410                                  EL3:
   411 000002E5 C606[8600]01            	mov 	byte[flagopen], 1
   412 000002EA E9DAFE                  	jmp 	ETERNO
   413                                  	
   414                                  ;*******************************************************************
   415                                  
   416                                  DO_HISTOGRAM:
   417 000002ED A1[8600]                	mov 	ax, [flagopen]	
   418 000002F0 3D0100                  	cmp 	ax, 1
   419 000002F3 7403                    	je 	ALOWED0
   420 000002F5 E9CFFE                  	jmp 	ETERNO
   421                                  
   422                                  ALOWED0:
   423 000002F8 A1[8700]                	mov 	ax, [flaghist]	
   424 000002FB 3D0000                  	cmp 	ax, 0
   425 000002FE 7403                    	je 	ALOWED1
   426 00000300 E9C4FE                  	jmp 	ETERNO
   427                                  
   428                                  ALOWED1:
   429 00000303 BE[8906]                	mov 	si, image
   430 00000306 BF[8900]                	mov 	di, histogram
   431 00000309 B925F4                  	mov 	cx, 62501
   432                                  L2:
   433 0000030C B700                    	mov 	bh, 00h
   434 0000030E 8A1C                    	mov 	bl, byte[si]
   435 00000310 01DB                    	add 	bx, bx
   436 00000312 81010100                	add 	word[di+bx], 0001h
   437 00000316 46                      	inc 	si
   438 00000317 E2F3                    	loop 	L2
   439                                  
   440                                  	; plot histogram
   441 00000319 B93F01                  	mov 	cx, 319
   442 0000031C BB[8900]                	mov 	bx, histogram
   443                                  L6:
   444 0000031F 81F93F02                	cmp 	cx, 575
   445 00000323 7426                    	je 	EL6
   446 00000325 8B17                    	mov 	dx, word[bx]
   447 00000327 C1EA04                  	shr 	dx, 4
   448 0000032A 81C2FA00                	add 	dx, 250
   449                                  	drawline cx, 250, cx, dx, branco_intenso
   450 0000032E 89C8                <1> 	mov	ax,%1
   451 00000330 50                  <1> 	push	ax
   452 00000331 B8FA00              <1> 	mov	ax,%2
   453 00000334 50                  <1> 	push	ax
   454 00000335 89C8                <1> 	mov	ax,%3
   455 00000337 50                  <1> 	push	ax
   456 00000338 89D0                <1> 	mov	ax,%4
   457 0000033A 50                  <1> 	push	ax
   458 0000033B C606[0000]0F        <1> 	mov	byte[cor],%5
   459 00000340 E84302              <1> 	call	line
   460 00000343 81C30200                	add 	bx, 2 
   461 00000347 41                      	inc 	cx
   462 00000348 E9D4FF                  	jmp 	L6
   463                                  EL6:
   464 0000034B C606[8700]01            	mov 	byte[flaghist], 1	
   465 00000350 E974FE                  	jmp 	ETERNO	
   466                                  
   467                                  
   468                                  ;*******************************************************************
   469                                  
   470                                  ACUMULATE:
   471 00000353 A1[8700]                	mov 	ax, [flaghist]	
   472 00000356 3D0100                  	cmp 	ax, 1
   473 00000359 7403                    	je 	ALOWED2
   474 0000035B E969FE                  	jmp 	ETERNO
   475                                  
   476                                  ALOWED2:
   477                                  ;	mov ax, [flageqhist]	
   478                                  ;	cmp ax, 0
   479                                  ;	je ALOWED3
   480                                  ;	jmp ETERNO
   481                                  
   482                                  ;ALOWED3:
   483 0000035E BE[8900]                	mov 	si, histogram
   484 00000361 BF[8902]                	mov 	di, cfd
   485                                  	
   486 00000364 8B1C                    	mov 	bx, [si]
   487 00000366 891D                    	mov 	[di], bx
   488 00000368 81C60200                	add 	si, 2
   489 0000036C B9FF00                  	mov 	cx, 255
   490                                  L4:
   491 0000036F 8B1C                    	mov 	bx, [si]
   492 00000371 015D02                  	add 	[di+2], bx
   493 00000374 8B1D                    	mov 	bx, [di]
   494 00000376 015D02                  	add 	[di+2], bx
   495 00000379 81C70200                	add 	di, 2
   496 0000037D 81C60200                	add 	si, 2
   497 00000381 E2EC                    	loop 	L4
   498                                  
   499                                  equalize:
   500 00000383 BF[8906]                	mov 	di, image
   501 00000386 B924F4                  	mov 	cx, 62500
   502 00000389 BB24F4                  	mov 	bx, 62500
   503                                  
   504                                  L7:
   505 0000038C 8A05                    	mov 	al, byte[di]
   506 0000038E 25FF00                  	and 	ax, 00FFh
   507 00000391 89C6                    	mov 	si, ax
   508 00000393 01F6                    	add 	si, si
   509 00000395 8B84[8902]              	mov 	ax, [cfd+si]
   510 00000399 BB0001                  	mov	bx, 256	
   511 0000039C F7E3                    	mul	bx	
   512 0000039E BB24F4                  	mov 	bx, 62500
   513 000003A1 F7F3                    	div 	bx
   514 000003A3 8805                    	mov 	[di], al
   515 000003A5 47                      	inc 	di
   516 000003A6 E2E4                    	loop 	L7
   517                                  
   518                                  DO_HISTOGRAM_EQ:
   519 000003A8 BE[8906]                	mov 	si, image
   520 000003AB BF[8904]                	mov 	di, eqhistogram
   521 000003AE B925F4                  	mov 	cx, 62501
   522                                  L10:
   523 000003B1 B700                    	mov 	bh, 00h
   524 000003B3 8A1C                    	mov 	bl, byte[si]
   525 000003B5 01DB                    	add 	bx, bx
   526 000003B7 81010100                	add 	word[di+bx], 0001h
   527 000003BB 46                      	inc 	si
   528 000003BC E2F3                    	loop 	L10
   529                                  
   530                                  	; plot histogram
   531 000003BE B93F01                  	mov 	cx, 319
   532 000003C1 BB[8904]                	mov 	bx, eqhistogram
   533                                  
   534                                  L5:
   535 000003C4 81F93F02                	cmp 	cx, 575
   536 000003C8 7426                    	je 	EL5
   537 000003CA 8B17                    	mov 	dx, word[bx]
   538 000003CC C1EA04                  	shr 	dx, 4
   539 000003CF 81C21000                	add 	dx, 16
   540                                  	drawline cx, 16, cx, dx, branco_intenso
   541 000003D3 89C8                <1> 	mov	ax,%1
   542 000003D5 50                  <1> 	push	ax
   543 000003D6 B81000              <1> 	mov	ax,%2
   544 000003D9 50                  <1> 	push	ax
   545 000003DA 89C8                <1> 	mov	ax,%3
   546 000003DC 50                  <1> 	push	ax
   547 000003DD 89D0                <1> 	mov	ax,%4
   548 000003DF 50                  <1> 	push	ax
   549 000003E0 C606[0000]0F        <1> 	mov	byte[cor],%5
   550 000003E5 E89E01              <1> 	call	line
   551 000003E8 81C30200                	add 	bx, 2 
   552 000003EC 41                      	inc 	cx
   553 000003ED E9D4FF                  	jmp 	L5
   554                                  
   555                                  EL5:	
   556 000003F0 C606[8800]01            	mov byte[flageqhist], 1
   557 000003F5 E9AAFE                  	jmp PRINT	
   558                                  
   559                                  LEFT_BUTTON_PRESSED:
   560 000003F8 60                      	pusha
   561                                  	writeword abrir, 1, 1, branco_intenso
   562 000003F9 C606[0000]0F        <1> 	mov	byte[cor], %4
   563 000003FE BB0000              <1>     	mov     bx,0
   564 00000401 B601                <1>     	mov     dh,%2
   565 00000403 B201                <1>     	mov     dl,%3
   566                              <1> %%local:
   567 00000405 E82201              <1> 	call	cursor
   568 00000408 8A87[0A00]          <1>     	mov     al,[bx+%1]
   569 0000040C 3C24                <1> 	cmp	al, '$'
   570 0000040E 7409                <1> 	je	%%exit
   571 00000410 E82E01              <1> 	call	caracter
   572 00000413 43                  <1>     	inc     bx
   573 00000414 FEC2                <1> 	inc	dl
   574 00000416 E9ECFF              <1>     	jmp	%%local
   575                              <1> %%exit:
   576                                  	writeword sair, 1, 10,branco_intenso
   577 00000419 C606[0000]0F        <1> 	mov	byte[cor], %4
   578 0000041E BB0000              <1>     	mov     bx,0
   579 00000421 B601                <1>     	mov     dh,%2
   580 00000423 B20A                <1>     	mov     dl,%3
   581                              <1> %%local:
   582 00000425 E80201              <1> 	call	cursor
   583 00000428 8A87[1000]          <1>     	mov     al,[bx+%1]
   584 0000042C 3C24                <1> 	cmp	al, '$'
   585 0000042E 7409                <1> 	je	%%exit
   586 00000430 E80E01              <1> 	call	caracter
   587 00000433 43                  <1>     	inc     bx
   588 00000434 FEC2                <1> 	inc	dl
   589 00000436 E9ECFF              <1>     	jmp	%%local
   590                              <1> %%exit:
   591                                  	writeword hist, 1, 18,branco_intenso
   592 00000439 C606[0000]0F        <1> 	mov	byte[cor], %4
   593 0000043E BB0000              <1>     	mov     bx,0
   594 00000441 B601                <1>     	mov     dh,%2
   595 00000443 B212                <1>     	mov     dl,%3
   596                              <1> %%local:
   597 00000445 E8E200              <1> 	call	cursor
   598 00000448 8A87[1500]          <1>     	mov     al,[bx+%1]
   599 0000044C 3C24                <1> 	cmp	al, '$'
   600 0000044E 7409                <1> 	je	%%exit
   601 00000450 E8EE00              <1> 	call	caracter
   602 00000453 43                  <1>     	inc     bx
   603 00000454 FEC2                <1> 	inc	dl
   604 00000456 E9ECFF              <1>     	jmp	%%local
   605                              <1> %%exit:
   606                                  	writeword eqhist, 1, 25,branco_intenso
   607 00000459 C606[0000]0F        <1> 	mov	byte[cor], %4
   608 0000045E BB0000              <1>     	mov     bx,0
   609 00000461 B601                <1>     	mov     dh,%2
   610 00000463 B219                <1>     	mov     dl,%3
   611                              <1> %%local:
   612 00000465 E8C200              <1> 	call	cursor
   613 00000468 8A87[1A00]          <1>     	mov     al,[bx+%1]
   614 0000046C 3C24                <1> 	cmp	al, '$'
   615 0000046E 7409                <1> 	je	%%exit
   616 00000470 E8CE00              <1> 	call	caracter
   617 00000473 43                  <1>     	inc     bx
   618 00000474 FEC2                <1> 	inc	dl
   619 00000476 E9ECFF              <1>     	jmp	%%local
   620                              <1> %%exit:
   621 00000479 61                      	popa
   622                                  	
   623 0000047A 81FA3000                	cmp 	dx, 48
   624 0000047E 7F1B                    	jg 	CASEO
   625 00000480 81F93F00                	cmp 	cx, 63
   626 00000484 7C18                    	jl 	CASE1
   627 00000486 81F97F00                	cmp 	cx, 127
   628 0000048A 7C35                    	jl 	CASE2
   629 0000048C 81F9BF00                	cmp 	cx, 191
   630 00000490 7C52                    	jl 	CASE3
   631 00000492 81F9FF00                	cmp 	cx, 255
   632 00000496 7C6F                    	jl 	CASE4
   633 00000498 E92CFD                  	jmp 	ETERNO
   634                                  
   635                                  CASEO:	
   636 0000049B E929FD                  	jmp 	ETERNO
   637                                  CASE1:
   638                                  	writeword abrir, 1, 1, amarelo
   639 0000049E C606[0000]0E        <1> 	mov	byte[cor], %4
   640 000004A3 BB0000              <1>     	mov     bx,0
   641 000004A6 B601                <1>     	mov     dh,%2
   642 000004A8 B201                <1>     	mov     dl,%3
   643                              <1> %%local:
   644 000004AA E87D00              <1> 	call	cursor
   645 000004AD 8A87[0A00]          <1>     	mov     al,[bx+%1]
   646 000004B1 3C24                <1> 	cmp	al, '$'
   647 000004B3 7409                <1> 	je	%%exit
   648 000004B5 E88900              <1> 	call	caracter
   649 000004B8 43                  <1>     	inc     bx
   650 000004B9 FEC2                <1> 	inc	dl
   651 000004BB E9ECFF              <1>     	jmp	%%local
   652                              <1> %%exit:
   653 000004BE E921FD                  	jmp 	OPEN
   654                                  CASE2:
   655                                  	writeword sair, 1, 10, amarelo
   656 000004C1 C606[0000]0E        <1> 	mov	byte[cor], %4
   657 000004C6 BB0000              <1>     	mov     bx,0
   658 000004C9 B601                <1>     	mov     dh,%2
   659 000004CB B20A                <1>     	mov     dl,%3
   660                              <1> %%local:
   661 000004CD E85A00              <1> 	call	cursor
   662 000004D0 8A87[1000]          <1>     	mov     al,[bx+%1]
   663 000004D4 3C24                <1> 	cmp	al, '$'
   664 000004D6 7409                <1> 	je	%%exit
   665 000004D8 E86600              <1> 	call	caracter
   666 000004DB 43                  <1>     	inc     bx
   667 000004DC FEC2                <1> 	inc	dl
   668 000004DE E9ECFF              <1>     	jmp	%%local
   669                              <1> %%exit:
   670 000004E1 E9F3FC                  	jmp 	EXIT
   671                                  CASE3:
   672                                  	writeword hist, 1, 18, amarelo
   673 000004E4 C606[0000]0E        <1> 	mov	byte[cor], %4
   674 000004E9 BB0000              <1>     	mov     bx,0
   675 000004EC B601                <1>     	mov     dh,%2
   676 000004EE B212                <1>     	mov     dl,%3
   677                              <1> %%local:
   678 000004F0 E83700              <1> 	call	cursor
   679 000004F3 8A87[1500]          <1>     	mov     al,[bx+%1]
   680 000004F7 3C24                <1> 	cmp	al, '$'
   681 000004F9 7409                <1> 	je	%%exit
   682 000004FB E84300              <1> 	call	caracter
   683 000004FE 43                  <1>     	inc     bx
   684 000004FF FEC2                <1> 	inc	dl
   685 00000501 E9ECFF              <1>     	jmp	%%local
   686                              <1> %%exit:
   687 00000504 E9E6FD                  	jmp 	DO_HISTOGRAM
   688                                  CASE4:
   689                                  	writeword eqhist, 1, 25, amarelo
   690 00000507 C606[0000]0E        <1> 	mov	byte[cor], %4
   691 0000050C BB0000              <1>     	mov     bx,0
   692 0000050F B601                <1>     	mov     dh,%2
   693 00000511 B219                <1>     	mov     dl,%3
   694                              <1> %%local:
   695 00000513 E81400              <1> 	call	cursor
   696 00000516 8A87[1A00]          <1>     	mov     al,[bx+%1]
   697 0000051A 3C24                <1> 	cmp	al, '$'
   698 0000051C 7409                <1> 	je	%%exit
   699 0000051E E82000              <1> 	call	caracter
   700 00000521 43                  <1>     	inc     bx
   701 00000522 FEC2                <1> 	inc	dl
   702 00000524 E9ECFF              <1>     	jmp	%%local
   703                              <1> %%exit:
   704 00000527 E929FE                  	jmp 	ACUMULATE
   705                                  
   706                                  ;***************************************************************************
   707                                  ; função cursor
   708                                  ; dh = linha (0-29) e  dl=coluna  (0-79)
   709                                  ;***************************************************************************
   710                                  cursor:
   711 0000052A 9C                      	pushf
   712 0000052B 50                      	push 	ax
   713 0000052C 53                      	push 	bx
   714 0000052D 51                      	push	cx
   715 0000052E 52                      	push	dx
   716 0000052F 56                      	push	si
   717 00000530 57                      	push	di
   718 00000531 55                      	push	bp
   719 00000532 B402                    	mov    	ah,2
   720 00000534 B700                    	mov    	bh,0
   721 00000536 CD10                    	int    	10h
   722 00000538 5D                      	pop	bp
   723 00000539 5F                      	pop	di
   724 0000053A 5E                      	pop	si
   725 0000053B 5A                      	pop	dx
   726 0000053C 59                      	pop	cx
   727 0000053D 5B                      	pop	bx
   728 0000053E 58                      	pop	ax
   729 0000053F 9D                      	popf
   730 00000540 C3                      	ret
   731                                  ;_____________________________________________________________________________
   732                                  ;
   733                                  ;   fun��o caracter escrito na posi��o do cursor
   734                                  ;
   735                                  ; al= caracter a ser escrito
   736                                  ; cor definida na variavel cor
   737                                  caracter:
   738 00000541 9C                      	pushf
   739 00000542 50                      	push	ax
   740 00000543 53                      	push	bx
   741 00000544 51                      	push	cx
   742 00000545 52                      	push	dx
   743 00000546 56                      	push	si
   744 00000547 57                      	push	di
   745 00000548 55                      	push	bp
   746 00000549 B409                        	mov    	ah,9
   747 0000054B B700                        	mov    	bh,0
   748 0000054D B90100                      	mov    	cx,1
   749 00000550 8A1E[0000]                 	mov    	bl,[cor]
   750 00000554 CD10                        	int    	10h
   751 00000556 5D                      	pop	bp
   752 00000557 5F                      	pop	di
   753 00000558 5E                      	pop	si
   754 00000559 5A                      	pop	dx
   755 0000055A 59                      	pop	cx
   756 0000055B 5B                      	pop	bx
   757 0000055C 58                      	pop	ax
   758 0000055D 9D                      	popf
   759 0000055E C3                      	ret
   760                                  ;_____________________________________________________________________________
   761                                  ;
   762                                  ;   função plot_xy
   763                                  ;
   764                                  ; push x; push y; call plot_xy;  (x<639, y<479)
   765                                  ; cor definida na variavel cor
   766                                  plot_xy:
   767 0000055F 55                      	push	bp
   768 00000560 89E5                    	mov	bp,sp
   769 00000562 9C                      	pushf
   770 00000563 50                      	push 	ax
   771 00000564 53                      	push 	bx
   772 00000565 51                      	push	cx
   773 00000566 52                      	push	dx
   774 00000567 56                      	push	si
   775 00000568 57                      	push	di
   776 00000569 B40C                    	mov    	ah,0ch
   777 0000056B A0[0000]                	mov    	al,[cor]
   778 0000056E B700                    	mov    	bh,0
   779 00000570 BADF01                  	mov    	dx,479
   780 00000573 2B5604                  	sub	dx,[bp+4]
   781 00000576 8B4E06                  	mov    	cx,[bp+6]
   782 00000579 CD10                    	int    	10h
   783 0000057B 5F                      	pop	di
   784 0000057C 5E                      	pop	si
   785 0000057D 5A                      	pop	dx
   786 0000057E 59                      	pop	cx
   787 0000057F 5B                      	pop	bx
   788 00000580 58                      	pop	ax
   789 00000581 9D                      	popf
   790 00000582 5D                      	pop	bp
   791 00000583 C20400                  	ret	4
   792                                  ;-----------------------------------------------------------------------------
   793                                  ;
   794                                  ;   fun��o line
   795                                  ;
   796                                  ; push x1; push y1; push x2; push y2; call line;  (x<639, y<479)
   797                                  line:
   798 00000586 55                      	push	bp
   799 00000587 89E5                    	mov	bp,sp
   800 00000589 9C                      	pushf                        ;coloca os flags na pilha
   801 0000058A 50                      	push 	ax
   802 0000058B 53                      	push 	bx
   803 0000058C 51                      	push	cx
   804 0000058D 52                      	push	dx
   805 0000058E 56                      	push	si
   806 0000058F 57                      	push	di
   807 00000590 8B460A                  	mov	ax,[bp+10]   ; resgata os valores das coordenadas
   808 00000593 8B5E08                  	mov	bx,[bp+8]    ; resgata os valores das coordenadas
   809 00000596 8B4E06                  	mov	cx,[bp+6]    ; resgata os valores das coordenadas
   810 00000599 8B5604                  	mov	dx,[bp+4]    ; resgata os valores das coordenadas
   811 0000059C 39C8                    	cmp	ax,cx
   812 0000059E 7408                    	je	line2
   813 000005A0 721C                    	jb	line1
   814 000005A2 91                      	xchg	ax,cx
   815 000005A3 87DA                    	xchg	bx,dx
   816 000005A5 E91600                  	jmp	line1
   817                                  line2:		
   818                                  	; deltax=0
   819 000005A8 39D3                    	cmp	bx,dx  ;subtrai dx de bx
   820 000005AA 7202                    	jb	line3
   821 000005AC 87DA                    	xchg	bx,dx        ;troca os valores de bx e dx entre eles
   822                                  line3:	
   823                                  	; dx > bx
   824 000005AE 50                      	push 	ax
   825 000005AF 53                      	push	bx
   826 000005B0 E8ACFF                  	call	plot_xy
   827 000005B3 39D3                    	cmp	bx,dx
   828 000005B5 7503                    	jne	line31
   829 000005B7 E9C600                  	jmp	fim_line
   830 000005BA 43                      line31:	inc	bx
   831 000005BB E9F0FF                  	jmp	line3
   832                                  ;deltax <>0
   833                                  line1:
   834                                  ; comparar m�dulos de deltax e deltay sabendo que cx>ax
   835                                  ; cx > ax
   836 000005BE 51                      	push	cx
   837 000005BF 29C1                    	sub	cx,ax
   838 000005C1 890E[0600]              	mov	[deltax],cx
   839 000005C5 59                      	pop	cx
   840 000005C6 52                      	push	dx
   841 000005C7 29DA                    	sub	dx,bx
   842 000005C9 7702                    	ja	line32
   843 000005CB F7DA                    	neg	dx
   844                                  line32:		
   845 000005CD 8916[0800]              	mov	[deltay],dx
   846 000005D1 5A                      	pop	dx
   847                                  
   848 000005D2 50                      	push	ax
   849 000005D3 A1[0600]                	mov	ax,[deltax]
   850 000005D6 3B06[0800]              	cmp	ax,[deltay]
   851 000005DA 58                      	pop	ax
   852 000005DB 724D                    	jb	line5
   853                                  
   854                                  ; cx > ax e deltax>deltay
   855 000005DD 51                      	push	cx
   856 000005DE 29C1                    	sub	cx,ax
   857 000005E0 890E[0600]              	mov	[deltax],cx
   858 000005E4 59                      	pop	cx
   859 000005E5 52                      	push	dx
   860 000005E6 29DA                    	sub	dx,bx
   861 000005E8 8916[0800]              	mov	[deltay],dx
   862 000005EC 5A                      	pop	dx
   863                                  
   864 000005ED 89C6                    	mov	si,ax
   865                                  line4:
   866 000005EF 50                      	push	ax
   867 000005F0 52                      	push	dx
   868 000005F1 56                      	push	si
   869 000005F2 29C6                    	sub	si,ax	;(x-x1)
   870 000005F4 A1[0800]                	mov	ax,[deltay]
   871 000005F7 F7EE                    	imul	si
   872 000005F9 8B36[0600]              	mov	si,[deltax]		;arredondar
   873 000005FD D1EE                    	shr	si,1
   874                                  ; se numerador (DX)>0 soma se <0 subtrai
   875 000005FF 81FA0000                	cmp	dx,0
   876 00000603 7C09                    	jl	ar1
   877 00000605 01F0                    	add	ax,si
   878 00000607 81D20000                	adc	dx,0
   879 0000060B E90600                  	jmp	arc1
   880                                  ar1:		
   881 0000060E 29F0                    	sub	ax,si
   882 00000610 81DA0000                	sbb	dx,0
   883                                  arc1:
   884 00000614 F73E[0600]              	idiv	word [deltax]
   885 00000618 01D8                    	add	ax,bx
   886 0000061A 5E                      	pop	si
   887 0000061B 56                      	push	si
   888 0000061C 50                      	push	ax
   889 0000061D E83FFF                  	call	plot_xy
   890 00000620 5A                      	pop	dx
   891 00000621 58                      	pop	ax
   892 00000622 39CE                    	cmp	si,cx
   893 00000624 745A                    	je	fim_line
   894 00000626 46                      	inc	si
   895 00000627 E9C5FF                  	jmp	line4
   896                                  
   897                                  line5:		
   898 0000062A 39D3                    	cmp	bx,dx
   899 0000062C 7203                    	jb 	line7
   900 0000062E 91                      	xchg	ax,cx
   901 0000062F 87DA                    	xchg	bx,dx
   902                                  line7:
   903 00000631 51                      	push 	cx
   904 00000632 29C1                    	sub 	cx,ax
   905 00000634 890E[0600]              	mov  	[deltax],cx
   906 00000638 59                      	pop  	cx
   907 00000639 52                      	push 	dx
   908 0000063A 29DA                    	sub 	dx,bx
   909 0000063C 8916[0800]              	mov 	[deltay],dx
   910 00000640 5A                      	pop 	dx
   911 00000641 89DE                    	mov 	si,bx
   912                                  line6:
   913 00000643 52                      	push 	dx
   914 00000644 56                      	push 	si
   915 00000645 50                      	push 	ax
   916 00000646 29DE                    	sub  	si,bx	;(y-y1)
   917 00000648 A1[0600]                	mov  	ax,[deltax]
   918 0000064B F7EE                    	imul 	si
   919 0000064D 8B36[0800]              	mov  	si,[deltay]		;arredondar
   920 00000651 D1EE                    	shr  	si,1
   921                                  ; se numerador (DX)>0 soma se <0 subtrai
   922 00000653 81FA0000                	cmp  	dx,0
   923 00000657 7C09                    	jl   	ar2
   924 00000659 01F0                    	add  	ax,si
   925 0000065B 81D20000                	adc  	dx,0
   926 0000065F E90600                  	jmp  	arc2
   927                                  ar2:	
   928 00000662 29F0                    	sub 	ax, si
   929 00000664 81DA0000                	sbb 	dx, 0
   930                                  arc2:
   931 00000668 F73E[0800]              	idiv 	word [deltay]
   932 0000066C 89C7                    	mov 	di, ax
   933 0000066E 58                      	pop 	ax
   934 0000066F 01C7                    	add 	di, ax
   935 00000671 5E                      	pop 	si
   936 00000672 57                      	push 	di
   937 00000673 56                      	push 	si
   938 00000674 E8E8FE                  	call 	plot_xy
   939 00000677 5A                      	pop 	dx
   940 00000678 39D6                    	cmp 	si, dx
   941 0000067A 7404                    	je  	fim_line
   942 0000067C 46                      	inc 	si
   943 0000067D E9C3FF                  	jmp 	line6
   944                                  
   945                                  fim_line:
   946 00000680 5F                      	pop	di
   947 00000681 5E                      	pop 	si
   948 00000682 5A                      	pop 	dx
   949 00000683 59                      	pop 	cx
   950 00000684 5B                      	pop 	bx
   951 00000685 58                      	pop 	ax
   952 00000686 9D                      	popf
   953 00000687 5D                      	pop 	bp
   954 00000688 C20800                  	ret 	8
   955                                  ;*******************************************************************
   956                                  segment data
   957 00000000 0F                      cor      	db		branco_intenso
   958                                  ; I R G B COR
   959                                  ; 0 0 0 0 preto
   960                                  ; 0 0 0 1 azul
   961                                  ; 0 0 1 0 verde
   962                                  ; 0 0 1 1 cyan
   963                                  ; 0 1 0 0 vermelho
   964                                  ; 0 1 0 1 magenta
   965                                  ; 0 1 1 0 marrom
   966                                  ; 0 1 1 1 branco
   967                                  ; 1 0 0 0 cinza
   968                                  ; 1 0 0 1 azul claro
   969                                  ; 1 0 1 0 verde claro
   970                                  ; 1 0 1 1 cyan claro
   971                                  ; 1 1 0 0 rosa
   972                                  ; 1 1 0 1 magenta claro
   973                                  ; 1 1 1 0 amarelo
   974                                  ; 1 1 1 1 branco intenso
   975                                  
   976                                  preto		equ		0
   977                                  azul		equ		1
   978                                  verde		equ		2
   979                                  cyan		equ		3
   980                                  vermelho	equ		4
   981                                  magenta		equ		5
   982                                  marrom		equ		6
   983                                  branco		equ		7
   984                                  cinza		equ		8
   985                                  azul_claro	equ		9
   986                                  verde_claro	equ		10
   987                                  cyan_claro	equ		11
   988                                  rosa		equ		12
   989                                  magenta_claro	equ		13
   990                                  amarelo		equ		14
   991                                  branco_intenso	equ		15
   992                                  
   993 00000001 00                      modo_anterior	db		0
   994 00000002 0000                    linha   	dw  		0
   995 00000004 0000                    coluna  	dw  		0
   996 00000006 0000                    deltax		dw		0
   997 00000008 0000                    deltay		dw		0	
   998 0000000A 414252495224            abrir    	db  		'ABRIR$'
   999 00000010 5341495224              sair    	db  		'SAIR$'
  1000 00000015 4849535424              hist    	db  		'HIST$'
  1001 0000001A 48495354455124          eqhist    	db  		'HISTEQ$'
  1002 00000021 484953544F4752414D-     txhist    	db  		'HISTOGRAMA ORIGINAL$'
  1003 0000002A 41204F524947494E41-
  1004 00000033 4C24               
  1005 00000035 484953544F4752414D-     txeqhist    	db  		'HISTOGRAMA EQUALIZADO$'
  1006 0000003E 4120455155414C495A-
  1007 00000047 41444F24           
  1008 0000004B 524F444F4C464F2056-     nome    	db  		'RODOLFO VALENTIM$'
  1009 00000054 414C454E54494D24   
  1010 0000005C 53495354454D415320-     disc    	db  		'SISTEMAS EMBARCADOS 2016/1$'
  1011 00000065 454D4241524341444F-
  1012 0000006E 5320323031362F3124 
  1013 00000077 696D6167656D2E7478-     filename	db		'imagem.txt', 0
  1014 00000080 7400               
  1015 00000082 00                      buffer		db		0
  1016 00000083 0000                    handle 		dw 		0
  1017 00000085 00                      input		db		0
  1018 00000086 00                      flagopen	db		0
  1019 00000087 00                      flaghist	db		0
  1020 00000088 00                      flageqhist	db		0
  1021 00000089 0000<rept>              histogram:	times		256 dw 0
  1022 00000289 0000<rept>              cfd:		times		256 dw 0
  1023 00000489 0000<rept>              eqhistogram: 	times		256 dw 0
  1024 00000689 <res 0000F424>          image:		resb  		62500
  1025                                  
  1026                                  ;*************************************************************************
  1027                                  
  1028                                  segment stack stack
  1029 00000000 <res 00000100>             		resb 		256
  1030                                  stacktop:
  1031                                  
  1032                                  
