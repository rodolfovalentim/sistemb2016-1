     1                                  segment code
     2                                  ..start:
     3 00000000 B8[0000]                	mov ax, data
     4 00000003 8ED8                    	mov ds, ax
     5 00000005 B8[0000]                	mov ax, stack
     6 00000008 8ED0                    	mov ss,	ax
     7 0000000A BC[0001]                	mov sp, stacktop
     8                                  	
     9                                  	;abre arquivo
    10 0000000D B43D                    	mov ah, 3Dh
    11 0000000F B000                    	mov al, 00
    12 00000011 BA[0000]                	mov dx, filename
    13 00000014 B90100                  	mov cx, 1
    14 00000017 CD21                    	int 21h	
    15                                  
    16 00000019 A3[0D00]                	mov word[handle], ax
    17 0000001C BB[1201]                	mov bx, image
    18 0000001F 891E[0F00]              	mov word[pointer], bx
    19                                  read:
    20 00000023 B43F                     	mov ah, 3Fh
    21 00000025 8B1E[0D00]              	mov bx, word[handle]
    22 00000029 B90100                  	mov cx, 1
    23 0000002C BA[0C00]                	mov dx, input
    24 0000002F CD21                    	int 21h
    25                                  	
    26 00000031 39C8                    	cmp ax, cx
    27 00000033 7C35                    	jl finishread
    28                                  	
    29                                  	;compara com o espa√ßo
    30 00000035 8A16[0C00]              	mov dl, byte[input]
    31 00000039 80FA20                  	cmp dl, 20h
    32 0000003C 7412                    	je store
    33 0000003E A0[0B00]                	mov al, byte[buffer]
    34 00000041 80EA30                  	sub dl, '0'
    35 00000044 B30A                    	mov bl, 0ah
    36 00000046 F6E3                    	mul bl
    37 00000048 00D0                    	add al, dl
    38 0000004A A2[0B00]                	mov byte[buffer], al
    39 0000004D E9D3FF                  	jmp read
    40                                  	
    41                                  store:
    42 00000050 8B1E[0F00]              	mov bx, word[pointer]
    43 00000054 8A16[0B00]              	mov dl, byte[buffer]
    44 00000058 8817                    	mov byte[bx], dl
    45 0000005A 891E[0F00]              	mov [pointer], bx
    46 0000005E FF06[0F00]              	inc word[pointer]
    47 00000062 C606[0B00]00            	mov byte[buffer], 00h
    48 00000067 E9B9FF                  	jmp read
    49                                  
    50                                  finishread:
    51 0000006A 8B1E[0F00]              	mov bx, [pointer]
    52 0000006E 8A16[0B00]              	mov dl, [buffer]
    53 00000072 8817                    	mov byte[bx], dl
    54 00000074 891E[0F00]              	mov [pointer], bx
    55 00000078 FF06[0F00]              	inc word[pointer]
    56 0000007C C606[0B00]00            	mov byte[buffer], 00h
    57 00000081 E90000                  	jmp print	
    58                                  
    59                                  print:
    60 00000084 8B1E[0F00]              	mov bx, word[pointer]
    61 00000088 C60724                  	mov byte[bx], '$'
    62 0000008B 891E[0F00]              	mov word[pointer], bx
    63 0000008F BA[1201]                	mov dx, image
    64 00000092 B409                    	mov ah, 09h
    65 00000094 CD21                    	int 21h
    66 00000096 E90000                  	jmp cphist
    67                                  
    68                                  cphist:
    69 00000099 BB[1100]                	mov bx, histogram
    70 0000009C 891E[0F00]              	mov word[pointer], bx
    71 000000A0 B90A00                  	mov cx, 10
    72                                  prox:
    73 000000A3 B400                    	mov ah, 00h
    74 000000A5 A0[1201]                	mov al, byte[image] 
    75 000000A8 89C6                    	mov si, ax
    76 000000AA 8800                    	mov byte[bx+si], al
    77 000000AC FF06[1201]              	inc word[image]
    78 000000B0 E2F1                    	loop prox
    79                                  	
    80                                  printh:
    81 000000B2 BA[1100]                	mov dx, histogram
    82 000000B5 B409                    	mov ah, 09h
    83 000000B7 CD21                    	int 21h
    84 000000B9 E90000                  	jmp exit
    85                                  
    86                                  exit:
    87 000000BC B44C                    	mov ah, 4Ch
    88 000000BE CD21                    	int 21h
    89                                  
    90                                  segment data
    91 00000000 696D6167656D2E7478-     filename	db	'imagem.txt', 0
    92 00000009 7400               
    93 0000000B 00                      buffer		db	0
    94 0000000C 00                      input		db	0
    95 0000000D 0000                    handle		dw 	0
    96 0000000F 0100                    pointer		dw 	1
    97 00000011 30<rept>                histogram:	times	256 db '0'
    98 00000111 24                      fim1		db	'$'
    99 00000112 <res 0000F424>          image:		resb  	62500
   100                                  
   101                                  segment stack stack
   102 00000000 <res 00000100>          	resb 256
   103                                  stacktop:
   104                                  
