     1                                  ; Rodolfo Vieira Valentim
     2                                  ; Sistemas Embarcados 2016/1
     3                                  
     4                                  %macro drawline 5 		;x1,y1,x2,y2,color
     5                                  	mov	ax,%1
     6                                  	push	ax
     7                                  	mov	ax,%2
     8                                  	push	ax
     9                                  	mov	ax,%3
    10                                  	push	ax
    11                                  	mov	ax,%4
    12                                  	push	ax
    13                                  	mov	byte[cor],%5
    14                                  	call	line
    15                                  %endmacro
    16                                  
    17                                  %macro ponto 2			; x,y,color
    18                                  	add 	%1, 3
    19                                  	add 	%2, 100
    20                                  	push 	%1
    21                                  	push 	%2	
    22                                  	call	plot_xy
    23                                  	sub	%1, 3
    24                                  	sub 	%2, 100
    25                                  %endmacro
    26                                  
    27                                  %macro writeword 3
    28                                      	mov     bx,0
    29                                      	mov     dh,%2			;linha 0-29
    30                                      	mov     dl,%3			;coluna 0-79
    31                                  %%local:
    32                                  	call	cursor
    33                                      	mov     al,[bx+%1]
    34                                  	cmp	al, '$'
    35                                  	je	%%exit
    36                                  	call	caracter
    37                                      	inc     bx			;proximo caracter
    38                                  	inc	dl			;avanca a coluna
    39                                      	jmp	%%local
    40                                  %%exit:
    41                                  %endmacro
    42                                  
    43                                  ;*******************************************************************
    44                                  
    45                                  segment code
    46                                  ..start:
    47 00000000 B8[0000]                    	mov 	ax,data
    48 00000003 8ED8                        	mov 	ds,ax
    49 00000005 B8[0000]                    	mov 	ax,stack
    50 00000008 8ED0                        	mov 	ss,ax
    51 0000000A BC[0001]                    	mov 	sp,stacktop
    52                                  
    53                                  ;*******************************************************************
    54                                  	;abre arquivo
    55 0000000D B43D                    	mov 	ah, 3Dh
    56 0000000F B000                    	mov	al, 00
    57 00000011 BA[7700]                	mov 	dx, filename
    58 00000014 B90100                  	mov 	cx, 1
    59 00000017 CD21                    	int 	21h	
    60                                  
    61 00000019 A3[8300]                	mov 	word[handle], ax
    62 0000001C BE[8606]                	mov 	si, image
    63                                  
    64                                  read:
    65 0000001F B43F                     	mov 	ah, 3Fh
    66 00000021 8B1E[8300]              	mov 	bx, word[handle]
    67 00000025 B90100                  	mov	cx, 1
    68 00000028 BA[8500]                	mov 	dx, input
    69 0000002B CD21                    	int	21h
    70                                  
    71                                  	;verifica se o arquivo acabou	
    72 0000002D 39C8                    	cmp 	ax, cx
    73 0000002F 7C2A                    	jl 	finishread
    74                                  	
    75                                  	;compara com o espa√ßo
    76 00000031 8A16[8500]              	mov 	dl, byte[input]
    77 00000035 80FA20                  	cmp 	dl, 20h
    78 00000038 7412                    	je 	store
    79                                  
    80 0000003A A0[8200]                	mov 	al, byte[buffer]
    81 0000003D 80EA30                  	sub 	dl, '0'
    82 00000040 B30A                    	mov 	bl, 0ah
    83 00000042 F6E3                    	mul 	bl
    84 00000044 00D0                    	add 	al, dl
    85 00000046 A2[8200]                	mov 	byte[buffer], al
    86 00000049 E9D3FF                  	jmp 	read
    87                                  	
    88                                  store:
    89 0000004C 8A16[8200]              	mov 	dl, byte[buffer]
    90 00000050 8814                    	mov 	byte[si], dl
    91 00000052 46                      	inc 	si
    92 00000053 C606[8200]00            	mov 	byte[buffer], 00h
    93 00000058 E9C4FF                  	jmp	read
    94                                  
    95                                  finishread:
    96                                  	; termina a leitura da imagem
    97 0000005B 8A16[8200]              	mov 	dl, [buffer]	
    98 0000005F 8814                    	mov 	byte[si], dl
    99                                  	
   100 00000061 B43E                    	mov 	ah, 3Eh
   101 00000063 8B1E[8300]              	mov 	bx, word[handle]
   102 00000067 CD21                    	int 	21h
   103                                  
   104 00000069 E95C01                  	jmp 	STARTUP
   105                                  
   106                                  ;**************************************************************************8
   107                                  open:
   108                                  	; print to screen
   109 0000006C BE0000                  	mov 	si, 0  	; x
   110 0000006F BFF900                  	mov 	di, 249	; y
   111 00000072 BB[8606]                	mov 	bx, image
   112                                  
   113 00000075 81FF0000                L3:	cmp 	di, 0
   114 00000079 7434                    	je 	EL3
   115 0000007B B400                    	mov 	ah, 00h
   116 0000007D 8A07                    	mov 	al, byte[bx]
   117 0000007F C0E804                  	shr 	al, 4
   118 00000082 A2[0000]                	mov 	byte[cor], al	
   119                                  	ponto 	si, di
   120 00000085 81C60300            <1> 	add 	%1, 3
   121 00000089 81C76400            <1> 	add 	%2, 100
   122 0000008D 56                  <1> 	push 	%1
   123 0000008E 57                  <1> 	push 	%2
   124 0000008F E83403              <1> 	call	plot_xy
   125 00000092 81EE0300            <1> 	sub	%1, 3
   126 00000096 81EF6400            <1> 	sub 	%2, 100
   127 0000009A 46                      	inc 	si
   128 0000009B 43                      	inc 	bx	
   129 0000009C 81FEFA00                	cmp 	si, 250
   130 000000A0 7403                    	je 	RCAX
   131 000000A2 E9D0FF                  	jmp 	L3
   132                                  RCAX:	
   133                                  	;reset counter ax
   134 000000A5 BE0000                  	mov 	si, 0
   135 000000A8 81EF0100                	sub 	di, 1
   136 000000AC E9C6FF                  	jmp 	L3
   137                                  
   138                                  EL3:
   139 000000AF E9C002                  	jmp ETERNO
   140                                  
   141                                  ;*******************************************************************
   142                                  
   143                                  doHistogram:
   144 000000B2 BE[8606]                	mov 	si, image
   145 000000B5 BF[8600]                	mov 	di, histogram
   146 000000B8 B925F4                  	mov 	cx, 62501
   147                                  L2:
   148 000000BB B700                    	mov 	bh, 00h
   149 000000BD 8A1C                    	mov 	bl, byte[si]
   150 000000BF 01DB                    	add 	bx, bx
   151 000000C1 81010100                	add 	word[di+bx], 0001h
   152 000000C5 46                      	inc 	si
   153 000000C6 E2F3                    	loop 	L2
   154                                  
   155                                  	; plot histogram
   156 000000C8 B93F01                  	mov 	cx, 319
   157 000000CB BB[8600]                	mov 	bx, histogram
   158                                  L6:
   159 000000CE 81F93F02                	cmp 	cx, 575
   160 000000D2 7426                    	je 	EL6
   161 000000D4 8B17                    	mov 	dx, word[bx]
   162 000000D6 C1EA04                  	shr 	dx, 4
   163 000000D9 81C2FA00                	add 	dx, 250
   164                                  	drawline cx, 250, cx, dx, branco_intenso
   165 000000DD 89C8                <1> 	mov	ax,%1
   166 000000DF 50                  <1> 	push	ax
   167 000000E0 B8FA00              <1> 	mov	ax,%2
   168 000000E3 50                  <1> 	push	ax
   169 000000E4 89C8                <1> 	mov	ax,%3
   170 000000E6 50                  <1> 	push	ax
   171 000000E7 89D0                <1> 	mov	ax,%4
   172 000000E9 50                  <1> 	push	ax
   173 000000EA C606[0000]0F        <1> 	mov	byte[cor],%5
   174 000000EF E8FB02              <1> 	call	line
   175 000000F2 81C30200                	add 	bx, 2 
   176 000000F6 41                      	inc 	cx
   177 000000F7 E9D4FF                  	jmp 	L6
   178                                  EL6:
   179 000000FA E97502                  	jmp ETERNO	
   180                                  
   181                                  
   182                                  ;*******************************************************************
   183                                  
   184                                  acumulate:
   185 000000FD BE[8600]                	mov 	si, histogram
   186 00000100 BF[8602]                	mov 	di, cfd
   187                                  	
   188 00000103 8B1C                    	mov 	bx, [si]
   189 00000105 891D                    	mov 	[di], bx
   190 00000107 81C60200                	add 	si, 2
   191 0000010B B9FF00                  	mov 	cx, 255
   192                                  L4:
   193 0000010E 8B1C                    	mov 	bx, [si]
   194 00000110 015D02                  	add 	[di+2], bx
   195 00000113 8B1D                    	mov 	bx, [di]
   196 00000115 015D02                  	add 	[di+2], bx
   197 00000118 81C70200                	add 	di, 2
   198 0000011C 81C60200                	add 	si, 2
   199 00000120 E2EC                    	loop 	L4
   200                                  
   201                                  equalize:
   202 00000122 BF[8606]                	mov 	di, image
   203 00000125 B924F4                  	mov 	cx, 62500
   204 00000128 BB24F4                  	mov 	bx, 62500
   205                                  
   206                                  L7:
   207 0000012B 8A05                    	mov 	al, byte[di]
   208 0000012D 25FF00                  	and 	ax, 00FFh
   209 00000130 89C6                    	mov 	si, ax
   210 00000132 01F6                    	add 	si, si
   211 00000134 8B84[8602]              	mov 	ax, [cfd+si]
   212 00000138 BB0001                  	mov	bx, 256	
   213 0000013B F7E3                    	mul	bx	
   214 0000013D BB24F4                  	mov 	bx, 62500
   215 00000140 F7F3                    	div 	bx
   216 00000142 8805                    	mov 	[di], al
   217 00000144 47                      	inc 	di
   218 00000145 E2E4                    	loop 	L7
   219                                  
   220                                  doHistogramEq:
   221 00000147 BE[8606]                	mov 	si, image
   222 0000014A BF[8604]                	mov 	di, eqhistogram
   223 0000014D B925F4                  	mov 	cx, 62501
   224                                  L10:
   225 00000150 B700                    	mov 	bh, 00h
   226 00000152 8A1C                    	mov 	bl, byte[si]
   227 00000154 01DB                    	add 	bx, bx
   228 00000156 81010100                	add 	word[di+bx], 0001h
   229 0000015A 46                      	inc 	si
   230 0000015B E2F3                    	loop 	L10
   231                                  
   232                                  	; plot histogram
   233 0000015D B93F01                  	mov 	cx, 319
   234 00000160 BB[8604]                	mov 	bx, eqhistogram
   235                                  
   236                                  L5:
   237 00000163 81F93F02                	cmp 	cx, 575
   238 00000167 7426                    	je 	EL5
   239 00000169 8B17                    	mov 	dx, word[bx]
   240 0000016B C1EA04                  	shr 	dx, 4
   241 0000016E 81C21000                	add 	dx, 16
   242                                  	drawline cx, 16, cx, dx, branco_intenso
   243 00000172 89C8                <1> 	mov	ax,%1
   244 00000174 50                  <1> 	push	ax
   245 00000175 B81000              <1> 	mov	ax,%2
   246 00000178 50                  <1> 	push	ax
   247 00000179 89C8                <1> 	mov	ax,%3
   248 0000017B 50                  <1> 	push	ax
   249 0000017C 89D0                <1> 	mov	ax,%4
   250 0000017E 50                  <1> 	push	ax
   251 0000017F C606[0000]0F        <1> 	mov	byte[cor],%5
   252 00000184 E86602              <1> 	call	line
   253 00000187 81C30200                	add 	bx, 2 
   254 0000018B 41                      	inc 	cx
   255 0000018C E9D4FF                  	jmp 	L5
   256                                  
   257                                  EL5:
   258 0000018F E9E001                  	jmp 	ETERNO
   259                                  
   260                                  left_button_pressed:
   261 00000192 81FAAF01                	cmp 	dx, 431
   262 00000196 7721                    	ja 	CASEO
   263 00000198 81F93F00                	cmp 	cx, 63
   264 0000019C 771E                    	ja 	CASE1
   265 0000019E 81F92800                	cmp 	cx, 40
   266 000001A2 7218                    	jb 	CASE1
   267 000001A4 81F97F00                	cmp 	cx, 127
   268 000001A8 7215                    	jb 	CASE2
   269 000001AA 81F9BF00                	cmp 	cx, 191
   270 000001AE 7212                    	jb 	CASE3
   271 000001B0 81F9FF00                	cmp 	cx, 255
   272 000001B4 720F                    	jb 	CASE4
   273 000001B6 E9B901                  	jmp 	ETERNO
   274                                  
   275                                  CASEO:	
   276 000001B9 E9B601                  	jmp 	ETERNO
   277                                  CASE1:
   278 000001BC E9ADFE                  	jmp 	open
   279                                  CASE2:
   280 000001BF E9C001                  	jmp 	EXIT
   281                                  CASE3:
   282 000001C2 E9(8600)                	jmp 	histogram
   283                                  CASE4:
   284 000001C5 E935FF                  	jmp 	acumulate
   285                                  ;*******************************************************************
   286                                  
   287                                  STARTUP:
   288                                  ; salvar modo corrente de video(vendo como esta o modo de video da maquina)
   289 000001C8 B40F                            mov 	ah, 0Fh
   290 000001CA CD10                        	int 	10h
   291 000001CC A2[0100]                    	mov 	[modo_anterior], al   
   292                                  
   293                                  ; alterar modo de video para grafico 640x480 16 cores
   294 000001CF B012                        	mov    	al, 12h
   295 000001D1 B400                       	mov    	ah, 0
   296 000001D3 CD10                        	int    	10h
   297                                  	
   298                                  ;escrever uma mensagem
   299                                  
   300                                  	drawline 255, 0, 255, 479, branco_intenso
   301 000001D5 B8FF00              <1> 	mov	ax,%1
   302 000001D8 50                  <1> 	push	ax
   303 000001D9 B80000              <1> 	mov	ax,%2
   304 000001DC 50                  <1> 	push	ax
   305 000001DD B8FF00              <1> 	mov	ax,%3
   306 000001E0 50                  <1> 	push	ax
   307 000001E1 B8DF01              <1> 	mov	ax,%4
   308 000001E4 50                  <1> 	push	ax
   309 000001E5 C606[0000]0F        <1> 	mov	byte[cor],%5
   310 000001EA E80002              <1> 	call	line
   311                                  	drawline 255, 239, 639, 239, branco_intenso
   312 000001ED B8FF00              <1> 	mov	ax,%1
   313 000001F0 50                  <1> 	push	ax
   314 000001F1 B8EF00              <1> 	mov	ax,%2
   315 000001F4 50                  <1> 	push	ax
   316 000001F5 B87F02              <1> 	mov	ax,%3
   317 000001F8 50                  <1> 	push	ax
   318 000001F9 B8EF00              <1> 	mov	ax,%4
   319 000001FC 50                  <1> 	push	ax
   320 000001FD C606[0000]0F        <1> 	mov	byte[cor],%5
   321 00000202 E8E801              <1> 	call	line
   322                                  	drawline 63, 479, 63, 431, branco_intenso
   323 00000205 B83F00              <1> 	mov	ax,%1
   324 00000208 50                  <1> 	push	ax
   325 00000209 B8DF01              <1> 	mov	ax,%2
   326 0000020C 50                  <1> 	push	ax
   327 0000020D B83F00              <1> 	mov	ax,%3
   328 00000210 50                  <1> 	push	ax
   329 00000211 B8AF01              <1> 	mov	ax,%4
   330 00000214 50                  <1> 	push	ax
   331 00000215 C606[0000]0F        <1> 	mov	byte[cor],%5
   332 0000021A E8D001              <1> 	call	line
   333                                  	drawline 127, 479, 127, 431, branco_intenso
   334 0000021D B87F00              <1> 	mov	ax,%1
   335 00000220 50                  <1> 	push	ax
   336 00000221 B8DF01              <1> 	mov	ax,%2
   337 00000224 50                  <1> 	push	ax
   338 00000225 B87F00              <1> 	mov	ax,%3
   339 00000228 50                  <1> 	push	ax
   340 00000229 B8AF01              <1> 	mov	ax,%4
   341 0000022C 50                  <1> 	push	ax
   342 0000022D C606[0000]0F        <1> 	mov	byte[cor],%5
   343 00000232 E8B801              <1> 	call	line
   344                                  	drawline 191, 479, 191, 431, branco_intenso
   345 00000235 B8BF00              <1> 	mov	ax,%1
   346 00000238 50                  <1> 	push	ax
   347 00000239 B8DF01              <1> 	mov	ax,%2
   348 0000023C 50                  <1> 	push	ax
   349 0000023D B8BF00              <1> 	mov	ax,%3
   350 00000240 50                  <1> 	push	ax
   351 00000241 B8AF01              <1> 	mov	ax,%4
   352 00000244 50                  <1> 	push	ax
   353 00000245 C606[0000]0F        <1> 	mov	byte[cor],%5
   354 0000024A E8A001              <1> 	call	line
   355                                  	drawline 0, 431, 255, 431, branco_intenso
   356 0000024D B80000              <1> 	mov	ax,%1
   357 00000250 50                  <1> 	push	ax
   358 00000251 B8AF01              <1> 	mov	ax,%2
   359 00000254 50                  <1> 	push	ax
   360 00000255 B8FF00              <1> 	mov	ax,%3
   361 00000258 50                  <1> 	push	ax
   362 00000259 B8AF01              <1> 	mov	ax,%4
   363 0000025C 50                  <1> 	push	ax
   364 0000025D C606[0000]0F        <1> 	mov	byte[cor],%5
   365 00000262 E88801              <1> 	call	line
   366                                  	drawline 0, 63, 255, 63, branco_intenso
   367 00000265 B80000              <1> 	mov	ax,%1
   368 00000268 50                  <1> 	push	ax
   369 00000269 B83F00              <1> 	mov	ax,%2
   370 0000026C 50                  <1> 	push	ax
   371 0000026D B8FF00              <1> 	mov	ax,%3
   372 00000270 50                  <1> 	push	ax
   373 00000271 B83F00              <1> 	mov	ax,%4
   374 00000274 50                  <1> 	push	ax
   375 00000275 C606[0000]0F        <1> 	mov	byte[cor],%5
   376 0000027A E87001              <1> 	call	line
   377                                  
   378                                  	writeword abrir, 1, 1
   379 0000027D BB0000              <1>     	mov     bx,0
   380 00000280 B601                <1>     	mov     dh,%2
   381 00000282 B201                <1>     	mov     dl,%3
   382                              <1> %%local:
   383 00000284 E80A01              <1> 	call	cursor
   384 00000287 8A87[0A00]          <1>     	mov     al,[bx+%1]
   385 0000028B 3C24                <1> 	cmp	al, '$'
   386 0000028D 7409                <1> 	je	%%exit
   387 0000028F E81601              <1> 	call	caracter
   388 00000292 43                  <1>     	inc     bx
   389 00000293 FEC2                <1> 	inc	dl
   390 00000295 E9ECFF              <1>     	jmp	%%local
   391                              <1> %%exit:
   392                                  	writeword sair, 1, 10
   393 00000298 BB0000              <1>     	mov     bx,0
   394 0000029B B601                <1>     	mov     dh,%2
   395 0000029D B20A                <1>     	mov     dl,%3
   396                              <1> %%local:
   397 0000029F E8EF00              <1> 	call	cursor
   398 000002A2 8A87[1000]          <1>     	mov     al,[bx+%1]
   399 000002A6 3C24                <1> 	cmp	al, '$'
   400 000002A8 7409                <1> 	je	%%exit
   401 000002AA E8FB00              <1> 	call	caracter
   402 000002AD 43                  <1>     	inc     bx
   403 000002AE FEC2                <1> 	inc	dl
   404 000002B0 E9ECFF              <1>     	jmp	%%local
   405                              <1> %%exit:
   406                                  	writeword hist, 1, 18
   407 000002B3 BB0000              <1>     	mov     bx,0
   408 000002B6 B601                <1>     	mov     dh,%2
   409 000002B8 B212                <1>     	mov     dl,%3
   410                              <1> %%local:
   411 000002BA E8D400              <1> 	call	cursor
   412 000002BD 8A87[1500]          <1>     	mov     al,[bx+%1]
   413 000002C1 3C24                <1> 	cmp	al, '$'
   414 000002C3 7409                <1> 	je	%%exit
   415 000002C5 E8E000              <1> 	call	caracter
   416 000002C8 43                  <1>     	inc     bx
   417 000002C9 FEC2                <1> 	inc	dl
   418 000002CB E9ECFF              <1>     	jmp	%%local
   419                              <1> %%exit:
   420                                  	writeword eqhist, 1, 25
   421 000002CE BB0000              <1>     	mov     bx,0
   422 000002D1 B601                <1>     	mov     dh,%2
   423 000002D3 B219                <1>     	mov     dl,%3
   424                              <1> %%local:
   425 000002D5 E8B900              <1> 	call	cursor
   426 000002D8 8A87[1A00]          <1>     	mov     al,[bx+%1]
   427 000002DC 3C24                <1> 	cmp	al, '$'
   428 000002DE 7409                <1> 	je	%%exit
   429 000002E0 E8C500              <1> 	call	caracter
   430 000002E3 43                  <1>     	inc     bx
   431 000002E4 FEC2                <1> 	inc	dl
   432 000002E6 E9ECFF              <1>     	jmp	%%local
   433                              <1> %%exit:
   434                                  	writeword txhist, 1, 33
   435 000002E9 BB0000              <1>     	mov     bx,0
   436 000002EC B601                <1>     	mov     dh,%2
   437 000002EE B221                <1>     	mov     dl,%3
   438                              <1> %%local:
   439 000002F0 E89E00              <1> 	call	cursor
   440 000002F3 8A87[2100]          <1>     	mov     al,[bx+%1]
   441 000002F7 3C24                <1> 	cmp	al, '$'
   442 000002F9 7409                <1> 	je	%%exit
   443 000002FB E8AA00              <1> 	call	caracter
   444 000002FE 43                  <1>     	inc     bx
   445 000002FF FEC2                <1> 	inc	dl
   446 00000301 E9ECFF              <1>     	jmp	%%local
   447                              <1> %%exit:
   448                                  	writeword txeqhist, 16, 33
   449 00000304 BB0000              <1>     	mov     bx,0
   450 00000307 B610                <1>     	mov     dh,%2
   451 00000309 B221                <1>     	mov     dl,%3
   452                              <1> %%local:
   453 0000030B E88300              <1> 	call	cursor
   454 0000030E 8A87[3500]          <1>     	mov     al,[bx+%1]
   455 00000312 3C24                <1> 	cmp	al, '$'
   456 00000314 7409                <1> 	je	%%exit
   457 00000316 E88F00              <1> 	call	caracter
   458 00000319 43                  <1>     	inc     bx
   459 0000031A FEC2                <1> 	inc	dl
   460 0000031C E9ECFF              <1>     	jmp	%%local
   461                              <1> %%exit:
   462                                  	writeword nome, 27, 1
   463 0000031F BB0000              <1>     	mov     bx,0
   464 00000322 B61B                <1>     	mov     dh,%2
   465 00000324 B201                <1>     	mov     dl,%3
   466                              <1> %%local:
   467 00000326 E86800              <1> 	call	cursor
   468 00000329 8A87[4B00]          <1>     	mov     al,[bx+%1]
   469 0000032D 3C24                <1> 	cmp	al, '$'
   470 0000032F 7409                <1> 	je	%%exit
   471 00000331 E87400              <1> 	call	caracter
   472 00000334 43                  <1>     	inc     bx
   473 00000335 FEC2                <1> 	inc	dl
   474 00000337 E9ECFF              <1>     	jmp	%%local
   475                              <1> %%exit:
   476                                  	writeword disc, 28, 1
   477 0000033A BB0000              <1>     	mov     bx,0
   478 0000033D B61C                <1>     	mov     dh,%2
   479 0000033F B201                <1>     	mov     dl,%3
   480                              <1> %%local:
   481 00000341 E84D00              <1> 	call	cursor
   482 00000344 8A87[5C00]          <1>     	mov     al,[bx+%1]
   483 00000348 3C24                <1> 	cmp	al, '$'
   484 0000034A 7409                <1> 	je	%%exit
   485 0000034C E85900              <1> 	call	caracter
   486 0000034F 43                  <1>     	inc     bx
   487 00000350 FEC2                <1> 	inc	dl
   488 00000352 E9ECFF              <1>     	jmp	%%local
   489                              <1> %%exit:
   490                                  
   491                                  	; reset mouse and get its status:
   492 00000355 B80000                  	mov 	ax, 0
   493 00000358 CD33                    	int 	33h
   494 0000035A 3D0000                  	cmp 	ax, 0
   495 0000035D 7503                    	jne 	OK
   496 0000035F E92000                  	jmp EXIT
   497                                  
   498 00000362 B80800                  OK:	mov 	ax, 08h
   499 00000365 B90000                  	mov 	cx, 0		;largura minima
   500 00000368 BAE001                  	mov 	dx, 480		;largura max
   501 0000036B CD33                    	int 	33h
   502                                  
   503 0000036D B80100                  	mov 	ax, 01h
   504 00000370 CD33                    	int 	33h
   505                                  
   506                                  ETERNO:
   507 00000372 B80300                  	mov 	ax, 03h
   508 00000375 CD33                    	int 	33h
   509                                  
   510 00000377 F6C301                  	test 	bl,1
   511 0000037A 7503                    	jnz 	CLICK
   512 0000037C E9F3FF                  	jmp 	ETERNO
   513                                  CLICK:
   514 0000037F E910FE                  	jmp 	left_button_pressed
   515                                  
   516                                  EXIT:
   517 00000382 B408                    	mov 	ah,08h
   518 00000384 CD21                    	int 	21h
   519 00000386 B400                    	mov 	ah,0   			; set video mode
   520 00000388 A0[0100]                	mov 	al,[modo_anterior]   	; modo anterior
   521 0000038B CD10                    	int 	10h
   522                                  
   523 0000038D B44C                    	mov 	ah, 4Ch
   524 0000038F CD21                    	int	 21h
   525                                  ;***************************************************************************
   526                                  ; fun√ß√£o cursor
   527                                  ; dh = linha (0-29) e  dl=coluna  (0-79)
   528                                  ;***************************************************************************
   529                                  cursor:
   530 00000391 9C                      	pushf
   531 00000392 50                      	push 	ax
   532 00000393 53                      	push 	bx
   533 00000394 51                      	push	cx
   534 00000395 52                      	push	dx
   535 00000396 56                      	push	si
   536 00000397 57                      	push	di
   537 00000398 55                      	push	bp
   538 00000399 B402                    	mov    	ah,2
   539 0000039B B700                    	mov    	bh,0
   540 0000039D CD10                    	int    	10h
   541 0000039F 5D                      	pop	bp
   542 000003A0 5F                      	pop	di
   543 000003A1 5E                      	pop	si
   544 000003A2 5A                      	pop	dx
   545 000003A3 59                      	pop	cx
   546 000003A4 5B                      	pop	bx
   547 000003A5 58                      	pop	ax
   548 000003A6 9D                      	popf
   549 000003A7 C3                      	ret
   550                                  ;_____________________________________________________________________________
   551                                  ;
   552                                  ;   funÔøΩÔøΩo caracter escrito na posiÔøΩÔøΩo do cursor
   553                                  ;
   554                                  ; al= caracter a ser escrito
   555                                  ; cor definida na variavel cor
   556                                  caracter:
   557 000003A8 9C                      	pushf
   558 000003A9 50                      	push	ax
   559 000003AA 53                      	push	bx
   560 000003AB 51                      	push	cx
   561 000003AC 52                      	push	dx
   562 000003AD 56                      	push	si
   563 000003AE 57                      	push	di
   564 000003AF 55                      	push	bp
   565 000003B0 B409                        	mov    	ah,9
   566 000003B2 B700                        	mov    	bh,0
   567 000003B4 B90100                      	mov    	cx,1
   568 000003B7 8A1E[0000]                 	mov    	bl,[cor]
   569 000003BB CD10                        	int    	10h
   570 000003BD 5D                      	pop	bp
   571 000003BE 5F                      	pop	di
   572 000003BF 5E                      	pop	si
   573 000003C0 5A                      	pop	dx
   574 000003C1 59                      	pop	cx
   575 000003C2 5B                      	pop	bx
   576 000003C3 58                      	pop	ax
   577 000003C4 9D                      	popf
   578 000003C5 C3                      	ret
   579                                  ;_____________________________________________________________________________
   580                                  ;
   581                                  ;   fun√ß√£o plot_xy
   582                                  ;
   583                                  ; push x; push y; call plot_xy;  (x<639, y<479)
   584                                  ; cor definida na variavel cor
   585                                  plot_xy:
   586 000003C6 55                      	push	bp
   587 000003C7 89E5                    	mov	bp,sp
   588 000003C9 9C                      	pushf
   589 000003CA 50                      	push 	ax
   590 000003CB 53                      	push 	bx
   591 000003CC 51                      	push	cx
   592 000003CD 52                      	push	dx
   593 000003CE 56                      	push	si
   594 000003CF 57                      	push	di
   595 000003D0 B40C                    	mov    	ah,0ch
   596 000003D2 A0[0000]                	mov    	al,[cor]
   597 000003D5 B700                    	mov    	bh,0
   598 000003D7 BADF01                  	mov    	dx,479
   599 000003DA 2B5604                  	sub	dx,[bp+4]
   600 000003DD 8B4E06                  	mov    	cx,[bp+6]
   601 000003E0 CD10                    	int    	10h
   602 000003E2 5F                      	pop	di
   603 000003E3 5E                      	pop	si
   604 000003E4 5A                      	pop	dx
   605 000003E5 59                      	pop	cx
   606 000003E6 5B                      	pop	bx
   607 000003E7 58                      	pop	ax
   608 000003E8 9D                      	popf
   609 000003E9 5D                      	pop	bp
   610 000003EA C20400                  	ret	4
   611                                  ;-----------------------------------------------------------------------------
   612                                  ;
   613                                  ;   funÔøΩÔøΩo line
   614                                  ;
   615                                  ; push x1; push y1; push x2; push y2; call line;  (x<639, y<479)
   616                                  line:
   617 000003ED 55                      	push	bp
   618 000003EE 89E5                    	mov	bp,sp
   619 000003F0 9C                      	pushf                        ;coloca os flags na pilha
   620 000003F1 50                      	push 	ax
   621 000003F2 53                      	push 	bx
   622 000003F3 51                      	push	cx
   623 000003F4 52                      	push	dx
   624 000003F5 56                      	push	si
   625 000003F6 57                      	push	di
   626 000003F7 8B460A                  	mov	ax,[bp+10]   ; resgata os valores das coordenadas
   627 000003FA 8B5E08                  	mov	bx,[bp+8]    ; resgata os valores das coordenadas
   628 000003FD 8B4E06                  	mov	cx,[bp+6]    ; resgata os valores das coordenadas
   629 00000400 8B5604                  	mov	dx,[bp+4]    ; resgata os valores das coordenadas
   630 00000403 39C8                    	cmp	ax,cx
   631 00000405 7408                    	je	line2
   632 00000407 721C                    	jb	line1
   633 00000409 91                      	xchg	ax,cx
   634 0000040A 87DA                    	xchg	bx,dx
   635 0000040C E91600                  	jmp	line1
   636                                  line2:		
   637                                  	; deltax=0
   638 0000040F 39D3                    	cmp	bx,dx  ;subtrai dx de bx
   639 00000411 7202                    	jb	line3
   640 00000413 87DA                    	xchg	bx,dx        ;troca os valores de bx e dx entre eles
   641                                  line3:	
   642                                  	; dx > bx
   643 00000415 50                      	push 	ax
   644 00000416 53                      	push	bx
   645 00000417 E8ACFF                  	call	plot_xy
   646 0000041A 39D3                    	cmp	bx,dx
   647 0000041C 7503                    	jne	line31
   648 0000041E E9C600                  	jmp	fim_line
   649 00000421 43                      line31:	inc	bx
   650 00000422 E9F0FF                  	jmp	line3
   651                                  ;deltax <>0
   652                                  line1:
   653                                  ; comparar mÔøΩdulos de deltax e deltay sabendo que cx>ax
   654                                  ; cx > ax
   655 00000425 51                      	push	cx
   656 00000426 29C1                    	sub	cx,ax
   657 00000428 890E[0600]              	mov	[deltax],cx
   658 0000042C 59                      	pop	cx
   659 0000042D 52                      	push	dx
   660 0000042E 29DA                    	sub	dx,bx
   661 00000430 7702                    	ja	line32
   662 00000432 F7DA                    	neg	dx
   663                                  line32:		
   664 00000434 8916[0800]              	mov	[deltay],dx
   665 00000438 5A                      	pop	dx
   666                                  
   667 00000439 50                      	push	ax
   668 0000043A A1[0600]                	mov	ax,[deltax]
   669 0000043D 3B06[0800]              	cmp	ax,[deltay]
   670 00000441 58                      	pop	ax
   671 00000442 724D                    	jb	line5
   672                                  
   673                                  ; cx > ax e deltax>deltay
   674 00000444 51                      	push	cx
   675 00000445 29C1                    	sub	cx,ax
   676 00000447 890E[0600]              	mov	[deltax],cx
   677 0000044B 59                      	pop	cx
   678 0000044C 52                      	push	dx
   679 0000044D 29DA                    	sub	dx,bx
   680 0000044F 8916[0800]              	mov	[deltay],dx
   681 00000453 5A                      	pop	dx
   682                                  
   683 00000454 89C6                    	mov	si,ax
   684                                  line4:
   685 00000456 50                      	push	ax
   686 00000457 52                      	push	dx
   687 00000458 56                      	push	si
   688 00000459 29C6                    	sub	si,ax	;(x-x1)
   689 0000045B A1[0800]                	mov	ax,[deltay]
   690 0000045E F7EE                    	imul	si
   691 00000460 8B36[0600]              	mov	si,[deltax]		;arredondar
   692 00000464 D1EE                    	shr	si,1
   693                                  ; se numerador (DX)>0 soma se <0 subtrai
   694 00000466 81FA0000                	cmp	dx,0
   695 0000046A 7C09                    	jl	ar1
   696 0000046C 01F0                    	add	ax,si
   697 0000046E 81D20000                	adc	dx,0
   698 00000472 E90600                  	jmp	arc1
   699                                  ar1:		
   700 00000475 29F0                    	sub	ax,si
   701 00000477 81DA0000                	sbb	dx,0
   702                                  arc1:
   703 0000047B F73E[0600]              	idiv	word [deltax]
   704 0000047F 01D8                    	add	ax,bx
   705 00000481 5E                      	pop	si
   706 00000482 56                      	push	si
   707 00000483 50                      	push	ax
   708 00000484 E83FFF                  	call	plot_xy
   709 00000487 5A                      	pop	dx
   710 00000488 58                      	pop	ax
   711 00000489 39CE                    	cmp	si,cx
   712 0000048B 745A                    	je	fim_line
   713 0000048D 46                      	inc	si
   714 0000048E E9C5FF                  	jmp	line4
   715                                  
   716                                  line5:		
   717 00000491 39D3                    	cmp	bx,dx
   718 00000493 7203                    	jb 	line7
   719 00000495 91                      	xchg	ax,cx
   720 00000496 87DA                    	xchg	bx,dx
   721                                  line7:
   722 00000498 51                      	push 	cx
   723 00000499 29C1                    	sub 	cx,ax
   724 0000049B 890E[0600]              	mov  	[deltax],cx
   725 0000049F 59                      	pop  	cx
   726 000004A0 52                      	push 	dx
   727 000004A1 29DA                    	sub 	dx,bx
   728 000004A3 8916[0800]              	mov 	[deltay],dx
   729 000004A7 5A                      	pop 	dx
   730 000004A8 89DE                    	mov 	si,bx
   731                                  line6:
   732 000004AA 52                      	push 	dx
   733 000004AB 56                      	push 	si
   734 000004AC 50                      	push 	ax
   735 000004AD 29DE                    	sub  	si,bx	;(y-y1)
   736 000004AF A1[0600]                	mov  	ax,[deltax]
   737 000004B2 F7EE                    	imul 	si
   738 000004B4 8B36[0800]              	mov  	si,[deltay]		;arredondar
   739 000004B8 D1EE                    	shr  	si,1
   740                                  ; se numerador (DX)>0 soma se <0 subtrai
   741 000004BA 81FA0000                	cmp  	dx,0
   742 000004BE 7C09                    	jl   	ar2
   743 000004C0 01F0                    	add  	ax,si
   744 000004C2 81D20000                	adc  	dx,0
   745 000004C6 E90600                  	jmp  	arc2
   746                                  ar2:	
   747 000004C9 29F0                    	sub 	ax, si
   748 000004CB 81DA0000                	sbb 	dx, 0
   749                                  arc2:
   750 000004CF F73E[0800]              	idiv 	word [deltay]
   751 000004D3 89C7                    	mov 	di, ax
   752 000004D5 58                      	pop 	ax
   753 000004D6 01C7                    	add 	di, ax
   754 000004D8 5E                      	pop 	si
   755 000004D9 57                      	push 	di
   756 000004DA 56                      	push 	si
   757 000004DB E8E8FE                  	call 	plot_xy
   758 000004DE 5A                      	pop 	dx
   759 000004DF 39D6                    	cmp 	si, dx
   760 000004E1 7404                    	je  	fim_line
   761 000004E3 46                      	inc 	si
   762 000004E4 E9C3FF                  	jmp 	line6
   763                                  
   764                                  fim_line:
   765 000004E7 5F                      	pop	di
   766 000004E8 5E                      	pop 	si
   767 000004E9 5A                      	pop 	dx
   768 000004EA 59                      	pop 	cx
   769 000004EB 5B                      	pop 	bx
   770 000004EC 58                      	pop 	ax
   771 000004ED 9D                      	popf
   772 000004EE 5D                      	pop 	bp
   773 000004EF C20800                  	ret 	8
   774                                  ;*******************************************************************
   775                                  segment data
   776 00000000 0F                      cor      	db		branco_intenso
   777                                  ; I R G B COR
   778                                  ; 0 0 0 0 preto
   779                                  ; 0 0 0 1 azul
   780                                  ; 0 0 1 0 verde
   781                                  ; 0 0 1 1 cyan
   782                                  ; 0 1 0 0 vermelho
   783                                  ; 0 1 0 1 magenta
   784                                  ; 0 1 1 0 marrom
   785                                  ; 0 1 1 1 branco
   786                                  ; 1 0 0 0 cinza
   787                                  ; 1 0 0 1 azul claro
   788                                  ; 1 0 1 0 verde claro
   789                                  ; 1 0 1 1 cyan claro
   790                                  ; 1 1 0 0 rosa
   791                                  ; 1 1 0 1 magenta claro
   792                                  ; 1 1 1 0 amarelo
   793                                  ; 1 1 1 1 branco intenso
   794                                  
   795                                  preto		equ		0
   796                                  azul		equ		1
   797                                  verde		equ		2
   798                                  cyan		equ		3
   799                                  vermelho	equ		4
   800                                  magenta		equ		5
   801                                  marrom		equ		6
   802                                  branco		equ		7
   803                                  cinza		equ		8
   804                                  azul_claro	equ		9
   805                                  verde_claro	equ		10
   806                                  cyan_claro	equ		11
   807                                  rosa		equ		12
   808                                  magenta_claro	equ		13
   809                                  amarelo		equ		14
   810                                  branco_intenso	equ		15
   811                                  
   812 00000001 00                      modo_anterior	db		0
   813 00000002 0000                    linha   	dw  		0
   814 00000004 0000                    coluna  	dw  		0
   815 00000006 0000                    deltax		dw		0
   816 00000008 0000                    deltay		dw		0	
   817 0000000A 414252495224            abrir    	db  		'ABRIR$'
   818 00000010 5341495224              sair    	db  		'SAIR$'
   819 00000015 4849535424              hist    	db  		'HIST$'
   820 0000001A 48495354455124          eqhist    	db  		'HISTEQ$'
   821 00000021 484953544F4752414D-     txhist    	db  		'HISTOGRAMA ORIGINAL$'
   822 0000002A 41204F524947494E41-
   823 00000033 4C24               
   824 00000035 484953544F4752414D-     txeqhist    	db  		'HISTOGRAMA EQUALIZADO$'
   825 0000003E 4120455155414C495A-
   826 00000047 41444F24           
   827 0000004B 524F444F4C464F2056-     nome    	db  		'RODOLFO VALENTIM$'
   828 00000054 414C454E54494D24   
   829 0000005C 53495354454D415320-     disc    	db  		'SISTEMAS EMBARCADOS 2016/1$'
   830 00000065 454D4241524341444F-
   831 0000006E 5320323031362F3124 
   832 00000077 696D6167656D2E7478-     filename	db		'imagem.txt', 0
   833 00000080 7400               
   834 00000082 00                      buffer		db		0
   835 00000083 0000                    handle 		dw 		0
   836 00000085 00                      input		db		0
   837 00000086 0000<rept>              histogram:	times		256 dw 0
   838 00000286 0000<rept>              cfd:		times		256 dw 0
   839 00000486 0000<rept>              eqhistogram: 	times		256 dw 0
   840 00000686 <res 0000F424>          image:		resb  		62500
   841                                  
   842                                  ;*************************************************************************
   843                                  
   844                                  segment stack stack
   845 00000000 <res 00000100>             		resb 		256
   846                                  stacktop:
   847                                  
   848                                  
